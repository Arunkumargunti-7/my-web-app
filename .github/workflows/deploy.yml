name: Deploy to AWS ECS

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ap-south-1
  ECR_REPOSITORY: my-web-app
  ECS_CLUSTER: my-web-app-cluster
  ECS_SERVICE: my-web-app-service
  ECS_TASK_DEFINITION: my-web-app-task
  CONTAINER_NAME: my-web-app

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push Docker image to ECR
      run: |
        docker build -t $ECR_REPOSITORY .
        docker tag $ECR_REPOSITORY:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:latest
        docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:latest

    - name: Register ECS task definition and update service
      run: |
        ecs_task_definition=$(aws ecs register-task-definition \
          --family $ECS_TASK_DEFINITION \
          --execution-role-arn arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/ecsTaskExecutionRole \
          --network-mode awsvpc \
          --requires-compatibilities FARGATE \
          --cpu "256" \
          --memory "512" \
          --container-definitions "[{
            \"name\": \"$CONTAINER_NAME\",
            \"image\": \"${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:latest\",
            \"essential\": true,
            \"portMappings\": [{
              \"containerPort\": 80,
              \"hostPort\": 80,
              \"protocol\": \"tcp\"
            }]
          }]"
        )
        ecs_task_definition_arn=$(echo $ecs_task_definition | jq -r '.taskDefinition.taskDefinitionArn')

        aws ecs update-service \
          --cluster $ECS_CLUSTER \
          --service $ECS_SERVICE \
          --task-definition $ecs_task_definition_arn \
          --force-new-deployment \
          --region $AWS_REGION
